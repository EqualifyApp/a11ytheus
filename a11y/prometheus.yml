# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
    # metrics_path defaults to '/metrics'
  # scheme defaults to 'http'.
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]

# Monitor Uppies Containers
  - job_name: "integration_uppies"
    docker_sd_configs:
        - host: unix:///var/run/docker.sock # You can also use http/https to connect to the Docker daemon.
    relabel_configs:
    # Only keep containers that have a `prometheus-job` label.
        - source_labels: [__meta_docker_container_label_prometheus_job]
          regex: .+
          action: keep
        # Only keep containers that have the `uppie` image name
        - source_labels: [__meta_docker_container_image]
          regex: 'equalifyapp/integration-uppies:latest'
          action: keep
        # Replace the instance label with the container name
        - source_labels: [__meta_docker_container_name]
          target_label: instance
          action: replace
    # Use the task labels that are prefixed by `prometheus-`.
        - regex: __meta_docker_container_label_prometheus_(.+)
          action: labelmap
          replacement: $1
    # Exclude containers that have the `prometheus` or `alertmanager` image name
        - source_labels: [__meta_docker_container_image]
          regex: '(prometheus|alertmanager).*'
          action: drop

